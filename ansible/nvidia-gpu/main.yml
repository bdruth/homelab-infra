---
# NVIDIA GPU Configuration Playbook

- name: Configure NVIDIA GPU system for AI/ML/CUDA
  hosts: all
  become: true
  vars_files:
    - vars/main.yml

  tasks:
    - name: Add NVIDIA CUDA repository key
      ansible.builtin.apt:
        deb: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.1-1_all.deb
        state: present
      register: apt_key_result
      until: apt_key_result is success
      retries: 3
      delay: 5

    - name: Add NVIDIA CUDA repository
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/cuda-archive-keyring.gpg] https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/ /
        state: present
        filename: cuda-ubuntu2404-x86_64.list
        update_cache: yes

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - cuda-toolkit
          - nvidia-driver-570
          - nvidia-utils-570
          - nvidia-cuda-toolkit
          - nvidia-cuda-samples
          - nvidia-container-toolkit
          - vim
          - python3
          - pip
          - net-tools
          - git
          - podman
          - podman-docker
          - htop
          - dos2unix
          - tmux
        state: present
        update_cache: yes
      register: package_install
      until: package_install is success
      retries: 3
      delay: 5
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Remove docker-compose package
      ansible.builtin.apt:
        name: docker-compose
        state: absent

    - name: Load nvidia modules at boot
      ansible.builtin.template:
        src: nvidia-driver.conf.j2
        dest: /etc/modules-load.d/nvidia-driver.conf
        owner: root
        group: root
        mode: "0644"

    - name: Set up sample CUDA project
      ansible.builtin.template:
        src: nvidia-cuda-samples.j2
        dest: /etc/profile.d/nvidia-cuda-samples.sh
        owner: root
        group: root
        mode: "0755"
        
    - name: Check if btop is already installed with correct version
      ansible.builtin.command:
        cmd: btop --version
      register: btop_version_check
      changed_when: false
      failed_when: false
      
    - name: Install latest btop from GitHub
      block:
        - name: Create temp directory for btop download
          ansible.builtin.tempfile:
            state: directory
            suffix: btop
          register: btop_temp_dir
          
        - name: Download latest btop release
          ansible.builtin.get_url:
            url: "https://github.com/aristocratos/btop/releases/download/v{{ btop_version }}/btop-x86_64-linux-musl.tbz"
            dest: "{{ btop_temp_dir.path }}/btop.tbz"
            mode: "0644"
          register: btop_download
            
        - name: Extract btop archive
          ansible.builtin.unarchive:
            src: "{{ btop_temp_dir.path }}/btop.tbz"
            dest: "{{ btop_temp_dir.path }}"
            remote_src: yes
          
        - name: Install btop
          ansible.builtin.command:
            cmd: ./install.sh
            chdir: "{{ btop_temp_dir.path }}/btop"
          register: btop_install
          changed_when: btop_install.rc == 0
          
        - name: Clean up temp directory
          ansible.builtin.file:
            path: "{{ btop_temp_dir.path }}"
            state: absent
      when: btop_version_check.rc != 0 or btop_version not in btop_version_check.stdout
            
    - name: Check if Ollama is already installed
      ansible.builtin.command:
        cmd: ollama --version
      register: ollama_version_check
      changed_when: false
      failed_when: false
      
    - name: Install latest Ollama using official installer
      block:
        - name: Create temp directory for Ollama installation
          ansible.builtin.tempfile:
            state: directory
            suffix: ollama
          register: ollama_temp_dir
          
        - name: Download Ollama installer script
          ansible.builtin.get_url:
            url: https://ollama.com/install.sh
            dest: "{{ ollama_temp_dir.path }}/install.sh"
            mode: "0755"
          register: ollama_script_download
          
        - name: Run Ollama installer script
          ansible.builtin.command:
            cmd: ./install.sh
            chdir: "{{ ollama_temp_dir.path }}"
          environment:
            OLLAMA_YES: "yes"  # Non-interactive installation
          register: ollama_install
          changed_when: ollama_install.rc == 0
          
        - name: Clean up temp directory
          ansible.builtin.file:
            path: "{{ ollama_temp_dir.path }}"
            state: absent
      when: ollama_version_check.rc != 0
            
    - name: Enable Ollama service
      ansible.builtin.systemd:
        name: ollama
        enabled: yes
        state: started
        daemon_reload: yes
      when: ollama_version_check.rc == 0 or ollama_install is defined
