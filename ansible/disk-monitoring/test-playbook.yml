---
# Test playbook for disk monitoring configuration

- name: Import disk monitoring configuration playbook
  import_playbook: main.yml

- name: Validate disk monitoring configuration
  hosts: all
  become: true
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Check if host-specific variables file exists
      ansible.builtin.stat:
        path: "host_vars/{{ inventory_hostname }}.yml"
      register: host_vars_check
      delegate_to: localhost

    - name: Load host-specific variables
      ansible.builtin.include_vars:
        file: "host_vars/{{ inventory_hostname }}.yml"
      when: host_vars_check.stat.exists

    - name: Debug InfluxDB host variable
      ansible.builtin.debug:
        msg: "Using InfluxDB host: {{ influxdb_host }}"

    - name: Check if Telegraf is installed
      ansible.builtin.command: telegraf --version
      register: telegraf_version_result
      changed_when: false
      ignore_errors: true

    - name: Display Telegraf installation status
      ansible.builtin.debug:
        msg: "Telegraf installation: {{ 'OK - Installed' if telegraf_version_result.rc == 0 else 'Not properly installed' }}"

    - name: Check if Telegraf service is running
      ansible.builtin.systemd:
        name: telegraf
        state: started
      register: telegraf_service_status
      ignore_errors: true

    - name: Display Telegraf service status
      ansible.builtin.debug:
        msg: "Telegraf service: {{ 'OK - Running' if telegraf_service_status.status.ActiveState == 'active' else 'Not running properly' }}"

    - name: Check if disk monitoring configuration exists
      ansible.builtin.stat:
        path: /etc/telegraf/telegraf.d/disk.conf
      register: disk_config_check

    - name: Display disk monitoring configuration status
      ansible.builtin.debug:
        msg: "Disk monitoring config: {{ 'OK - Configuration file exists' if disk_config_check.stat.exists else 'Configuration file missing' }}"

    - name: Validate disk monitoring configuration syntax
      ansible.builtin.command: telegraf --config /etc/telegraf/telegraf.d/disk.conf --test
      register: telegraf_config_test
      changed_when: false
      ignore_errors: true
      when: disk_config_check.stat.exists

    - name: Display configuration validation status
      ansible.builtin.debug:
        msg: "Configuration validation: {{ 'OK - Valid configuration' if telegraf_config_test.rc == 0 else 'Configuration has errors' }}"
      when: disk_config_check.stat.exists

    - name: Check InfluxDB connectivity
      ansible.builtin.uri:
        url: "http://{{ influxdb_host }}:{{ influxdb_port }}/ping"
        method: GET
        status_code: 204
        timeout: 10
      register: influxdb_connectivity
      ignore_errors: true

    - name: Display InfluxDB connectivity status
      ansible.builtin.debug:
        msg: "InfluxDB connectivity: {{ 'OK - Can reach InfluxDB' if influxdb_connectivity.status == 204 else 'Cannot reach InfluxDB' }}"

    - name: Wait for metrics to be collected and sent
      ansible.builtin.pause:
        seconds: 70
      when:
        - telegraf_service_status.status.ActiveState == 'active'
        - disk_config_check.stat.exists
        - telegraf_config_test.rc == 0
        - influxdb_connectivity.status == 204
