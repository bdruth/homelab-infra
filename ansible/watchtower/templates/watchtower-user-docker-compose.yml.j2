version: "3.8"

services:
  watchtower-{{ item.username }}:
    image: ghcr.io/nicholas-fedor/watchtower:{{ item.version | default('latest') }}
    container_name: watchtower-{{ item.username }}
    volumes:
      - /run/user/{{ item.uid }}/podman/podman.sock:/var/run/docker.sock
    restart: always
    command: --disable-memory-swappiness{% if item.exclude_containers | default([]) | length > 0 %} --disable-containers {% for container in item.exclude_containers %}{{ container }}{% if not loop.last %},{% endif %}{% endfor %}{% endif %}

    environment:
      # Build environment variables list to ensure consistent formatting
{% set env_vars = [] %}
{% if item.debug | default(false) | bool %}
{% set env_vars = env_vars + ['WATCHTOWER_DEBUG=true'] %}
{% endif %}
{% if item.cleanup | default(true) | bool %}
{% set env_vars = env_vars + ['WATCHTOWER_CLEANUP=true'] %}
{% endif %}
{% if item.include_stopped | default(false) | bool %}
{% set env_vars = env_vars + ['WATCHTOWER_INCLUDE_STOPPED=true'] %}
{% endif %}
{% if item.rolling_restart | default(true) | bool %}
{% set env_vars = env_vars + ['WATCHTOWER_ROLLING_RESTART=true'] %}
{% endif %}
{% if item.schedule | default('0 0 4 * * *') %}
{% set env_vars = env_vars + ['WATCHTOWER_SCHEDULE=' + item.schedule] %}
{% endif %}
{% if item.poll_interval | default('') %}
{% set env_vars = env_vars + ['WATCHTOWER_POLL_INTERVAL=' + item.poll_interval] %}
{% endif %}
{% if item.notifications_enabled | default(false) | bool and item.pushover_app_token | default('') and item.pushover_user_key | default('') %}
{% set env_vars = env_vars + ['WATCHTOWER_NOTIFICATIONS=shoutrrr', 'WATCHTOWER_NOTIFICATION_URL=pushover://shoutrrr:' + item.pushover_app_token + '@' + item.pushover_user_key, 'WATCHTOWER_NOTIFICATIONS_HOSTNAME=' + ansible_hostname + '-' + item.username] %}
{% endif %}
{% for var in env_vars %}
      - {{ var }}
{% endfor %}