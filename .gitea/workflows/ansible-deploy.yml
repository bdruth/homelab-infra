name: Ansible Deployment Workflow

on:
  push:
    branches: [main]
    paths:
      - "ansible/**"
      - "setup-ansible.sh"
      - "ansible-deploy.sh"
      - "ansible-pkgx-deploy.sh"
      - ".gitea/workflows/ansible-deploy.yml"

jobs:
  ansible-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: ${{ runner.os }}-deps-${{ hashFiles('**/ansible-pkgx-deploy.sh', '**/setup-ansible.sh') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Unlock git-crypt
        uses: sliteteam/github-action-git-crypt-unlock@1.3.0
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}

      - name: setup-pkgx
        uses: pkgxdev/setup@v4
        with:
          +: ansible
            ssh
            python

      - name: Install dependencies
        run: |
          echo "Cache hit: ${{ steps.cache.outputs.cache-hit }}"
          apt-get update
          apt-get install -y dnsutils netcat-traditional git-crypt

      - name: check-changes
        id: check_changes
        run: |
          echo "Checking for relevant file changes..."
          if git diff --name-only HEAD~1 | grep -E "^(ansible/|setup-ansible\.sh|ansible-deploy\.sh|ansible-pkgx-deploy\.sh|ansible-deploy\.yml)"; then
            echo "✅ Ansible files changed, proceeding with deployment"
            
            # Create a file to track which playbooks should be deployed
            rm -f .deploy_playbooks 2>/dev/null || true
            touch .deploy_playbooks
            
            echo "Detecting which roles were changed..."

            # Check for changes in common files that should trigger full deployment
            if git diff --name-only HEAD~1 | grep -E "^(ansible/inventory\.yml|ansible/infrastructure\.yml|ansible/ansible\.cfg|setup-ansible\.sh|ansible-deploy\.sh|ansible-pkgx-deploy\.sh)"; then
              echo "✅ Common Ansible files changed, will run full deployment"
              echo "FULL_DEPLOYMENT" > .deploy_playbooks
              echo "::set-output name=deploy_full::yes"
              exit 0
            fi
            
            # Check for each role directory and add to deploy list if changed
            git diff --name-only HEAD~1 \
              | grep -E "^ansible/(watchtower|nvidia-gpu|nut|drone|drone-runner-exec)" \
              | sed -E 's#^ansible/(watchtower|nvidia-gpu|nut|drone|drone-runner-exec).*#ansible/\1-only.yml#' \
              | sort -u > .deploy_playbooks

            # Count how many playbooks will be deployed
            PLAYBOOK_COUNT=$(wc -l < .deploy_playbooks)
            if [ "$PLAYBOOK_COUNT" -gt 0 ]; then
              echo "✅ Will deploy ${PLAYBOOK_COUNT} role(s)"
              echo "::set-output name=deploy_partial::yes"
            else
              echo "ℹ️ No specific roles changed"
            fi
            
            exit 0
          else
            echo "ℹ️ No relevant Ansible files changed, skipping deployment"
          fi

      - name: deploy-roles
        if: steps.check_changes.outputs.deploy_full == 'yes'
        run: |
          echo -n '${{ secrets.SSH_PRIVATE_KEY }}' > id_rsa.tmp
          chmod 600 id_rsa.tmp

          ./ansible-pkgx-deploy.sh --playbook=ansible/infrastructure.yml "--private-key id_rsa.tmp"

      - name: deploy-changed-roles
        if: steps.check_changes.outputs.deploy_partial == 'yes'
        run: |
          echo -n '${{ secrets.SSH_PRIVATE_KEY }}' > id_rsa.tmp
          chmod 600 id_rsa.tmp

          while IFS= read -r playbook; do
            echo "Deploying $playbook"
            ./ansible-pkgx-deploy.sh --playbook="$playbook" "--private-key id_rsa.tmp"
          done < .deploy_playbooks
